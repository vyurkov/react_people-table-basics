{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","role","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","PeopleTable","people","slugParam","useParams","checkPerson","useCallback","parentName","foundPerson","find","parent","map","born","died","motherName","fatherName","PeoplePage","React","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","result","catch","finally","length","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.8ac44d1a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport type Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <main className=\"section\">\n      <div className=\"container\">\n        <Navbar />\n        <div className=\"block\">\n          <Outlet />\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n      to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slugParam } = useParams();\n\n  const checkPerson = useCallback((parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const foundPerson = people.find(parent => parent.name === parentName);\n\n    return foundPerson ? <PersonLink person={foundPerson} /> : parentName;\n  }, [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug, sex, born, died, motherName, fatherName,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': slugParam === slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{checkPerson(motherName)}</td>\n              <td>{checkPerson(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = React.useState<Person[]>();\n  const [isError, setIsError] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(result => setPeople(result))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {people\n          && (people.length === 0\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n            : (\n              <PeopleTable people={people} />\n            )\n          )}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slugParam\" element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}